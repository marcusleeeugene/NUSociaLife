name: Backend Deployment (AWS EC2)

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
    # Allows you to run this workflow manually from the Actions tab

env: # .env config for backend
  #JWT
  JWT_ACCESS_TOKEN: ${{secrets.JWT_ACCESS_TOKEN}}
  # S3
  S3_ACCESS_KEY_ID: ${{secrets.S3_ACCESS_KEY_ID}}
  S3_SECRET_ACCESS_KEY: ${{secrets.S3_SECRET_ACCESS_KEY}}
  S3_BUCKET_NAME: ${{secrets.S3_BUCKET_NAME}}
  S3_BUCKET_REGION: ap-southeast-1
  # USERS MS
  USERS_DB_URL: ${{secrets.USERS_DB_URL}}
  FRONTEND_URL: https://nusocialife.net
  USERS_BACKEND_URL: https://server.nusocialife.net/api/users
  USERS_PORT: 5000
  EMAIL: nusocialife28@gmail.com
  GCP_ACCESS_TOKEN: ${{secrets.GCP_ACCESS_TOKEN}}
  GCP_REFRESH_TOKEN: ${{secrets.GCP_REFRESH_TOKEN}}
  GCP_CLIENT_SECRET: ${{secrets.GCP_CLIENT_SECRET}}
  GCP_CLIENT_ID: ${{secrets.GCP_CLIENT_ID}}
  # FORUM MS
  FORUM_DB_URL: ${{secrets.FORUM_DB_URL}}
  FORUM_PORT: 4000
  # FINDFRIEND MS
  FINDFRIEND_DB_URL: ${{secrets.FINDFRIEND_DB_URL}}
  FINDFRIEND_PORT: 7000
  # CHAT MS
  CHAT_PORT: 9000

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v2

      - name: Create Users env file
        run: |
          touch ./users/.env
          cat << EOF > ./users/.env
          USERS_DB_URL=${{ env.USERS_DB_URL }}
          FRONTEND_URL=${{ env.FRONTEND_URL }}
          USERS_BACKEND_URL=${{ env.USERS_BACKEND_URL }}
          USERS_PORT=${{ env.USERS_PORT }}
          EMAIL=${{ env.EMAIL }}
          GCP_ACCESS_TOKEN=${{ env.GCP_ACCESS_TOKEN }}
          GCP_REFRESH_TOKEN=${{ env.GCP_REFRESH_TOKEN }}
          GCP_CLIENT_SECRET=${{ env.GCP_CLIENT_SECRET }}
          GCP_CLIENT_ID=${{ env.GCP_CLIENT_ID }}
          JWT_ACCESS_TOKEN=${{ env.JWT_ACCESS_TOKEN }}
          S3_ACCESS_KEY_ID=${{ env.S3_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY=${{ env.S3_SECRET_ACCESS_KEY }}
          S3_BUCKET_NAME=${{ env.S3_BUCKET_NAME }}
          S3_BUCKET_REGION=${{ env.S3_BUCKET_REGION }}
          EOF
          cat ./users/.env

      - name: Create Forum env file
        run: |
          touch ./forum/.env
          cat << EOF > ./forum/.env
          FORUM_DB_URL=${{ env.FORUM_DB_URL }}
          FORUM_PORT=${{ env.FORUM_PORT }}
          JWT_ACCESS_TOKEN=${{ env.JWT_ACCESS_TOKEN }}
          EOF
          cat ./forum/.env

      - name: Create findFriend env file
        run: |
          touch ./findfriend/.env
          cat << EOF > ./findfriend/.env
          FINDFRIEND_DB_URL=${{ env.FINDFRIEND_DB_URL }}
          FINDFRIEND_PORT=${{ env.FINDFRIEND_PORT }}
          JWT_ACCESS_TOKEN=${{ env.JWT_ACCESS_TOKEN }}
          EOF
          cat ./findfriend/.env

      - name: Create chat env file
        run: |
          touch ./chat/.env
          cat << EOF > ./chat/.env
          CHAT_PORT=${{ env.CHAT_PORT }}
          EOF
          cat ./chat/.env

      - name: Docker Build
        run: |
          docker-compose build

      - name: AWS Configure
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ env.S3_BUCKET_REGION }}

      - name: Run script file
        shell: bash
        run: |
          chmod +x deploy.sh
          ./deploy.sh
